# Personal
## Regla general de Rsync:
rsync [optional modifiers] [SRC] [DEST]

## Ejemplo2: situado en WSL2 importo datos de AWS (Traer uploads de PROD a DEV):
## Me conecto a mi WSL2 y escribo:
sudo rsync -avh -e "ssh -i /home/ubuntu/.ssh/aws-jesuserro-key.pem" ubuntu@libricos.com:/var/www/html/wp-content/uploads/ /var/www/html/wp-content/uploads

## Ejemplo copia de ficheros locales (Win10 to AWS):
sudo rsync -avh -e "ssh -i /home/jesus/.ssh/aws-jesuserro-key.pem" /mnt/c/xampp/htdocs/jesuserro.com/wp-content/uploads/ ubuntu@35.181.164.5:/var/www/html/wp-content/uploads

## Otros ejemplos:
$ ssh -i ~/.ssh/aws-jesuserro-key.pem ubuntu@35.181.164.5
$ sudo rsync -avh -e "ssh -i /home/jesus/.ssh/aws-jesuserro-key.pem" /mnt/c/xampp/htdocs/jesuserro.com/wp-content/uploads/ ubuntu@35.181.164.5:/var/www/html/wp-content/uploads

$ sudo systemctl restart php7.4-fpm
$ sudo systemctl restart nginx


# Community
## To copy files from remote to local, maintaining file properties and sym-links
## (-a), zipping for faster transfer (-z), verbose (-v):
rsync -avz host:file1 :file1 /dest/
rsync -avz /source host:/dest

## To copy files using checksum (-c) rather than time to detect if the file has changed. (Useful for validating backups):
rsync -avc <src> <dest>

## To copy /src/foo folder into destination:
## This command will create /dest/foo if it does not already exist
rsync -auv /src/foo /dest

## To copy contents of /src/foo into destination:
## This command will not create /foo_bak/foo folder
rsync -auv /src/foo/ /foo_bak

## To copy file from local to remote over ssh with non standard port 1234 to
## destination folder in remoteuser's home directory:
rsync -avz -e "ssh -p1234" <source> <username>@<host>:<dest>

## Use the specified authentication key, instead of typing a password:
## (The key can be generated by ssh-keygen, and the public key should be placed
## in remote's authorized_keys, e.g. using ssh-copy-id)
rsync -avz -e "ssh -i ~/.ssh/id_rsa" <src> <dest>

## Log into remote as a user, but promote to root, to access privileged files:
rsync -avz --rsync-path="sudo rsync" user@<src> <dest>

## Rsync only symlinks and preserve them as symlinks (dont follow them):
find /path/to/files -type l -print | \
  rsync -av --files-from=- /path/to/files user@targethost:/dest_path
